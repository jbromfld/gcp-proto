# Local Development Environment Variables
#
# USAGE:
#   Option 1 (recommended): Copy to .env for docker-compose
#     cp env.local.template .env
#     docker-compose up -d
#
#   Option 2: Source directly for native Python
#     source env.local.template
#     python rag_api.py

# ============================================
# ELASTICSEARCH SETTINGS
# ============================================
export ELASTICSEARCH_URL=http://localhost:9200
export ELASTICSEARCH_USERNAME=
export ELASTICSEARCH_PASSWORD=

# ============================================
# LLM & EMBEDDING PROVIDERS
# ============================================
# Options: local, vertex, azure
export EMBEDDING_PROVIDER=local
export LLM_PROVIDER=local

# ============================================
# OLLAMA SETTINGS (for local LLM)
# ============================================
# Use localhost when running natively, host.docker.internal when in Docker
export OLLAMA_URL=http://localhost:11434

# ============================================
# VERTEX AI SETTINGS (for GCP deployments)
# ============================================
export GOOGLE_PROJECT_ID=your-project-id
export GOOGLE_REGION=us-central1

# ============================================
# API SETTINGS
# ============================================
export API_URL=http://localhost:8000

# ============================================
# SCRAPING SETTINGS
# ============================================
# Leave empty to manage sources via Admin UI
export SCRAPE_URLS=

# ============================================
# DEVELOPMENT SETTINGS
# ============================================
export LOG_LEVEL=INFO
export PYTHONUNBUFFERED=1

# ============================================
# NOTES
# ============================================
# - Docker Compose automatically reads .env file (no need to export)
# - For native Python, source this file: source env.local.template
# - Leave SCRAPE_URLS empty to manage sources via Admin UI
# - For GCP deployment, use gcp-configs/env.template instead

